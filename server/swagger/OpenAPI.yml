openapi: 3.0.1
info:
  title: SE-Sept-14 Recommender System API
  description: |
    <h1>Components of this app</h1>
    <ul>
      <li>
        <p><a href="https://fastapi.tiangolo.com" target="_blank" rel="noopener noreferrer">FastAPI</a> for RESTful API endpoints</p>
      </li>
      <li>
        <p><a href="https://mariadb.org" target="_blank" rel="noopener noreferrer">MariaDB</a> as the Relational SQL Database</p>
      </li>
      <li>
        <p><a href="https://github.com/coleifer/peewee" target="_blank" rel="noopener noreferrer">Peewee ORM</a> for Database models, connection and queries</p>
      </li>
      <li>
        <p><a href="https://www.docker.com" target="_blank" rel="noopener noreferrer">Docker</a> for deployment on <a href="https://aws.amazon.com/lightsail" target="_blank" rel="noopener noreferrer">AWS Lightsail VM</a></p>
      </li>
      <li><a href="https://www.cloudflare.com" target="_blank" rel="noopener noreferrer">Cloudflare</a> for DNS Management</li>
    </ul>
    
    <br>
    <h2>Courses table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>name</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>code</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>price</td>
          <td>Integer</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>credits</td>
          <td>Integer</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>description</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>corerequisite</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>prerequisites</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>hours_per_week</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>instructor_name</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>instructor_picture</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>created_at</td>
          <td>Timestamp</td>
          <td>Not Null, DEFAULT <code>current_timestamp()</code></td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Tags table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>name</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>created_at</td>
          <td>Timestamp</td>
          <td>Not Null, DEFAULT <code>current_timestamp()</code></td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Course Tag Map table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>course_id</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Courses.id)</td>
        </tr>
        <tr>
          <td>tag_id</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Tags.id)</td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Users table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>password</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>is_admin</td>
          <td>Boolean</td>
          <td>Not Null, DEFAULT <code>false</code></td>
        </tr>
        <tr>
          <td>is_alumni</td>
          <td>Boolean</td>
          <td>Not Null, DEFAULT <code>false</code></td>
        </tr>
        <tr>
          <td>password</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>email</td>
          <td>Text</td>
          <td>Not Null, Unique</td>
        </tr>
        <tr>
          <td>username</td>
          <td>Text</td>
          <td>Not Null, Unique</td>
        </tr>
        <tr>
          <td>created_at</td>
          <td>Timestamp</td>
          <td>Not Null, DEFAULT <code>current_timestamp()</td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>User profile table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>career_goals</td>
          <td>Text</td>
          <td></td>
        </tr>
        <tr>
          <td>completion_deadline</td>
          <td>Text</td>
          <td></td>
        </tr>
        <tr>
          <td>courses_willing_to_take</td>
          <td>Text</td>
          <td></td>
        </tr>
        <tr>
          <td>hours_per_week</td>
          <td>Integer</td>
          <td></td>
        </tr>
        <tr>
          <td>learning_preferences</td>
          <td>Text</td>
          <td></td>
        </tr>
        <tr>
          <td>user</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Users.id)</td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Favorite Courses Order table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>course</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Courses.id)</td>
        </tr>
        <tr>
          <td>order_index</td>
          <td>Integer</td>
          <td></td>
        </tr>
        <tr>
          <td>user_profile</td>
          <td>Text</td>
          <td>Not Null, Foreign Key (UserProfile.id)</td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Reviews table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>content</td>
          <td>Text</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>course</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Courses.id)</td>
        </tr>
        <tr>
          <td>ratings</td>
          <td>Integer</td>
          <td>Not Null</td>
        </tr>
        <tr>
          <td>created_at</td>
          <td>Timestamp</td>
          <td>Not Null, DEFAULT <code>current_timestamp()</code></td>
        </tr>
        <tr>
          <td>user</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Users.id)</code></td>
        </tr>
        <tr>
          <td>is_flagged</td>
          <td>Boolean</td>
          <td>Not Null, DEFAULT <code>false</code></td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>Review Tag Map table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>review</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Reviews.id)</td>
        </tr>
        <tr>
          <td>tag</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Tags.id)</td>
        </tr>
      </tbody>
    </table>
    
    <br>
    <h2>User Course Map table schema</h2>
    <table>
      <thead>
        <th>Name</th>
        <th>Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td>Integer</td>
          <td>Primary Key, Auto Increment, Not Null, Unique</td>
        </tr>
        <tr>
          <td>course</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Courses.id)</td>
        </tr>
        <tr>
          <td>user</td>
          <td>Integer</td>
          <td>Not Null, Foreign Key (Users.id)</td>
        </tr>
      </tbody>
    </table>
  version: 0.1.0
servers:
  - url: https://api.pickmycourse.online
  - url: http://18.136.102.74
tags:
  - name: Auth
    description: Authentication Management API
  - name: Course
    description: Course Management API
  - name: Review
    description: Review Management API
  - name: Profile
    description: Profile Management API
  - name: Admin
    description: Admin API to manage Students
  - name: Tags
    description: Tags API for search
paths:
  /api/auth/register:
    post:
      tags:
        - Auth
      summary: Create a new user
      operationId: register_user_api_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: login_user_api_auth_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username for login
                password:
                  type: string
                  description: The password for login
              required:
                - username
                - password
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/course/id/{id}:
    get:
      tags:
        - Course
      summary: Get Course
      operationId: get_course_api_course_id__id__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/course/all:
    get:
      tags:
        - Course
      summary: Get All Courses
      operationId: get_all_courses_api_course_all_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
  /api/course/:
    post:
      tags:
        - Course
      summary: Create Course
      operationId: create_course_api_course__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/course/{id}:
    delete:
      tags:
        - Course
      summary: Delete Course
      operationId: delete_course_api_course__id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Course
      summary: Update Course
      operationId: update_course_api_course__id__put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEdit'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/course/search:
    post:
      tags:
        - Course
      summary: Search Course
      operationId: search_course_api_course_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/course/recommend/{num_courses}:
    get:
      tags:
        - Course
      summary: Recommend Course
      operationId: recommend_course_api_course_recommend__num_courses__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: num_courses
          in: path
          required: true
          schema:
            type: integer
            exclusiveMaximum: true
            maximum: 5
            title: Number of courses
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/review/:
    post:
      tags:
        - Review
      summary: Create Review
      operationId: create_review_api_review__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewsCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/review/all:
    get:
      tags:
        - Review
      summary: Get All Reviews
      operationId: get_all_reviews_api_review_all_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/review/flag/{review_id}:
    get:
      tags:
        - Review
      summary: Flag Review
      operationId: flag_review_api_review_flag__review_id__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/review/{review_id}:
    put:
      tags:
        - Review
      summary: Edit Review
      operationId: edit_review_api_review__review_id__put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewsCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Review
      summary: Delete Review
      operationId: delete_review_api_review__review_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/review/tag:
    post:
      tags:
        - Review
      summary: Tag Review
      operationId: tag_review_api_review_tag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewTagMapCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/review/flagged/{review_id}:
    delete:
      tags:
        - Review
      summary: Delete Flagged Review
      operationId: delete_flagged_review_api_review_flagged__review_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/profile/:
    get:
      tags:
        - Profile
      summary: Get a user's Profile
      operationId: profile_api_profile__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - Profile
      summary: Create/Update a user's profile
      operationId: profile_api_profile__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/admin/all-students:
    get:
      tags:
        - Admin
      summary: Get All Students
      operationId: get_all_students_api_admin_all_students_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
  /api/admin/alumni/{user_id}:
    get:
      tags:
        - Admin
      summary: Make student an Alumni
      operationId: make_alumni_api_admin_alumni__user_id__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/tags/search:
    post:
      tags:
        - Tags
      summary: Search Tags
      operationId: search_tags_api_tags_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
components:
  schemas:
    CourseCreate:
      properties:
        name:
          type: string
          title: Name
        code:
          type: string
          title: Code
        price:
          type: integer
          title: Price
        credits:
          type: integer
          title: Credits
        description:
          type: string
          title: Description
        corerequisite:
          type: string
          title: Corerequisite
        prerequisites:
          type: string
          title: Prerequisites
        hours_per_week:
          type: string
          title: Hours Per Week
        instructor_name:
          type: string
          title: Instructor Name
        instructor_picture:
          type: string
          title: Instructor Picture
        tags:
          items:
            type: string
          type: array
          title: Tags
      type: object
      required:
        - name
        - code
        - price
        - credits
        - description
        - corerequisite
        - prerequisites
        - hours_per_week
        - instructor_name
        - instructor_picture
        - tags
      title: CourseCreate
    CourseEdit:
      properties:
        name:
          anyOf:
            - type: string
            - nullable: true
          title: Name
        code:
          anyOf:
            - type: string
            - nullable: true
          title: Code
        price:
          anyOf:
            - type: integer
            - nullable: true
          title: Price
        credits:
          anyOf:
            - type: integer
            - nullable: true
          title: Credits
        description:
          anyOf:
            - type: string
            - nullable: true
          title: Description
        corerequisite:
          anyOf:
            - type: string
            - nullable: true
          title: Corerequisite
        prerequisites:
          anyOf:
            - type: string
            - nullable: true
          title: Prerequisites
        hours_per_week:
          anyOf:
            - type: string
            - nullable: true
          title: Hours Per Week
        instructor_name:
          anyOf:
            - type: string
            - nullable: true
          title: Instructor Name
        instructor_picture:
          anyOf:
            - type: string
            - nullable: true
          title: Instructor Picture
      type: object
      title: CourseEdit
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ReviewTagMapCreate:
      properties:
        review_id:
          type: integer
          title: Review Id
        tag_id:
          type: integer
          title: Tag Id
      type: object
      required:
        - review_id
        - tag_id
      title: ReviewTagMapCreate
    ReviewsCreate:
      properties:
        content:
          anyOf:
            - type: string
            - nullable: true
          title: Content
        course_id:
          anyOf:
            - type: integer
            - nullable: true
          title: Course Id
        ratings:
          anyOf:
            - type: integer
            - nullable: true
          title: Ratings
      type: object
      required:
        - content
        - course_id
        - ratings
      title: ReviewsCreate
    SearchQuery:
      properties:
        query:
          type: string
          title: Query
      type: object
      required:
        - query
      title: SearchQuery
    UserLogin:
      properties:
        email:
          type: string
          title: Email
        password:
          type: string
          title: Password
      type: object
      required:
        - email
        - password
      title: UserLogin
    UserProfileUpdate:
      properties:
        career_goals:
          anyOf:
            - type: string
            - nullable: true
          title: Career Goals
        hours_per_week:
          anyOf:
            - type: integer
            - nullable: true
          title: Hours Per Week
        completion_deadline:
          anyOf:
            - type: string
            - nullable: true
          title: Completion Deadline
        learning_preferences:
          anyOf:
            - type: string
            - nullable: true
          title: Learning Preferences
        courses_willing_to_take:
          anyOf:
            - type: string
            - nullable: true
          title: Courses Willing To Take
      type: object
      title: UserProfileUpdate
    UserRegistration:
      properties:
        email:
          type: string
          title: Email
        password:
          type: string
          title: Password
        username:
          type: string
          title: Username
      type: object
      required:
        - email
        - password
        - username
      title: UserRegistration
    UserResponse:
      properties:
        id:
          type: integer
          title: Id
        email:
          type: string
          title: Email
        is_admin:
          type: integer
          title: Is Admin
        username:
          type: string
          title: Username
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
        - id
        - email
        - is_admin
        - username
        - access_token
        - token_type
      title: UserResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/auth/login
